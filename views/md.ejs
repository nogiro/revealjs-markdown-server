<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<title>revealjs-markdown-server</title>

		<link rel="stylesheet" href="css/reset.css">
		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/<%= parameters.theme %>.css">

		<!-- Theme used for syntax highlighting of code -->
		<link rel="stylesheet" href="lib/css/monokai.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>
<% if (parameters["custom-css"]) { %>
		<style>
<%- parameters["custom-css"] %>
		</style>
<% } %>
	</head>
	<body>
		<div class="reveal">
			<div class="slides">
				<section
					data-markdown="<%= parameters.md_path %>"
					data-separator="<%= parameters.separator %>"
					data-separator-vertical="<%= parameters['separator-vertical'] %>"
					data-separator-notes="^Note:"
					data-charset="UTF-8"
					>
				</section>
			</div>
		</div>

		<script src="js/reveal.js"></script>
		<script>
			var options = <%- JSON.stringify(parameters.options) %>;
			options.dependencies = [
				// Interpret Markdown in <section> elements
				{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
				{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },

				// Syntax highlight for <code> elements
				{ src: 'plugin/highlight/highlight.js', async: true },

				// Zoom in and out with Alt+click
				{ src: 'plugin/zoom-js/zoom.js', async: true },

				// Speaker notes
				{ src: 'plugin/notes/notes.js', async: true },

				// MathJax
				{ src: 'plugin/math/math.js', async: true }
			];
			Reveal.initialize(options);
		</script>
	</body>
</html>
